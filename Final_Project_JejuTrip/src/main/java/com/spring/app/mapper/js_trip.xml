<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(네임스페이스명은 프로젝트 전체내에서 유일해야 한다!!!!!) ====  절대  ; 쓰지마라 !!!!!!!!!! 
메퍼가 바뀌면 무조건  WAS를 껐다 켜야한다!!!!!!!!! -->
<mapper namespace="js_trip">
	
	
	<!--  조건에 따른 숙소리스트 select 해오기  -->
	<resultMap type="HashMap" id="lodgingMap">
		<result property="rno" column="rno" javaType="String" />
		<result property="lodging_name" column="LODGING_NAME" javaType="String" />
		<result property="lodging_address" column="LODGING_ADDRESS" javaType="String" />
		<result property="lodging_code" column="LODGING_CODE" javaType="String" />
		<result property="local_status" column="LOCAL_STATUS" javaType="String" />
		<result property="lodging_category" column="LODGING_CATEGORY" javaType="String" />
		<result property="main_img" column="MAIN_IMG" javaType="String" />
		<result property="review_division" column="REVIEW_DIVISION" javaType="String" />
		<result property="price" column="price" javaType="String" />
	</resultMap>
	<select id="lodgingList" parameterType="HashMap" resultMap="lodgingMap">

	  select rno,  LODGING_NAME, LODGING_ADDRESS, LODGING_CODE, LOCAL_STATUS,
		   	 LODGING_CATEGORY, MAIN_IMG, REVIEW_DIVISION, price
	  from
	  (
		  select ROWNUM as rno,  LODGING_NAME, LODGING_ADDRESS, LODGING_CODE, LOCAL_STATUS,
		   		 LODGING_CATEGORY, MAIN_IMG, REVIEW_DIVISION, price
		  from
		  (
		  	select LODGING_NAME, LODGING_ADDRESS, LODGING_CODE, LOCAL_STATUS,
	                 LODGING_CATEGORY, MAIN_IMG, REVIEW_DIVISION , price
	          from tbl_lodging L join 
	          (
	          select fk_lodging_code , min(price) as price
	          from tbl_room_detail
	          group by fk_lodging_code
	          )P
	          on L.lodging_code = P.fk_lodging_code
	          join
	          (
	          select fk_lodging_code
	          from 
	          tbl_lodging_convenient V
	          join tbl_convenient A
	          on V.fk_convenient_code = A.convenient_code
	         <if test='arr_convenient != null'>
		      and convenient_name in
			  <foreach collection="arr_convenient" index="i" open="(" separator="," close=")">
		    	'${arr_convenient[i]}'
		      </foreach>
		      </if>
		      group by fk_lodging_code
	          )C
	          on L.lodging_code = C.fk_lodging_code
	          where status = 1 
		   	<!-- 숙소 구분체크박스를 선택했다면 -->
			<if test='arr_category != null'>
		    and lodging_category in
		    <foreach collection="arr_category" index="i" open="(" separator="," close=")">
		    	'${arr_category[i]}'
		    </foreach>
		    </if>

		    <!-- 지역 구분체크박스를 선택했다면 -->
		    <if test='arr_local != null'>
		    and local_status in
			<foreach collection="arr_local" index="i" open="(" separator="," close=")">
		    	'${arr_local[i]}'
		    </foreach>
		    </if>
			<!-- 검색어를 입력하고 검색버튼을 눌렀다면 -->
		    <if test='searchWord != null'>
		    and lower(lodging_name) like '%' || lower(#{searchWord}) || '%'
			</if>
		    
			<if test='sort == ""'>
			order by lodging_code desc
			</if>
			 <if test='sort != ""'>
			order by price ${sort}
			</if>
			
		   )V
		   
	   )Q
	   where rno between #{startRno} and #{endRno}
	</select>
	
	
	<!-- 숙소리스트에서 조건에 따른 숙소 개수 구해오기 -->
	<select id="getLodgingTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
	    from tbl_lodging L
	    join
          (
          select fk_lodging_code
          from 
          tbl_lodging_convenient V
          join tbl_convenient A
          on V.fk_convenient_code = A.convenient_code
         <if test='arr_convenient != null'>
	      and convenient_name in
		  <foreach collection="arr_convenient" index="i" open="(" separator="," close=")">
	    	'${arr_convenient[i]}'
	      </foreach>
	      </if>
	      group by fk_lodging_code
          )C
          on L.lodging_code = C.fk_lodging_code
	      
	    where status = 1 
	    
		<if test='arr_category != null'>
	    and lodging_category in
	    <foreach collection="arr_category" index="i" open="(" separator="," close=")">
	    	'${arr_category[i]}'
	    </foreach>
	    </if>
	    
	    <!-- 검색어를 입력하고 검색버튼을 눌렀다면 -->
	    <if test='searchWord != null'>
	    and lodging_name like '%' || #{searchWord} || '%'
		</if>
	    
	    <if test='arr_local != null'>
	    and local_status in
		<foreach collection="arr_local" index="i" open="(" separator="," close=")">
	    	'${arr_local[i]}'
	    </foreach>
	    </if>
	        
	</select>
	
	
	<!-- 숙소리스트에 표현할 편의시설 목록 구해오기 -->
	<select id="getConvenientList" resultType="String">
		select convenient_name from tbl_convenient
	</select>
	
	
	<!-- 숙소의상세정보만 가져오기  -->
	<select id="getLodgingDetail" resultType="com.spring.app.trip.domain.LodgingVO">
		select *
		from tbl_lodging
		where lodging_code = #{lodgingCode}
	</select>
	
	
	
	<!--  한 숙소에 대한 객실리스트 select 해오기  -->
	<resultMap type="HashMap" id="RoomDetail">
		<result property="room_detail_code" column="room_detail_code" javaType="String" />
		<result property="fk_lodging_code" column="fk_lodging_code" javaType="String" />
		<result property="room_name" column="room_name" javaType="String" />
		<result property="price" column="price" javaType="String" />
		<result property="check_in" column="check_in" javaType="String" />
		<result property="check_out" column="check_out" javaType="String" />
		<result property="room_stock" column="room_stock" javaType="String" />
		<result property="min_person" column="min_person" javaType="String" />
		<result property="max_person" column="max_person" javaType="String" />
		<result property="room_img" column="room_img" javaType="String" />
	</resultMap>
	<select id="getRoomDetail" resultMap="RoomDetail">
		select room_detail_code, fk_lodging_code, room_name, price, 
	    check_in, check_out, room_stock, min_person, max_person,
	    room_img
	    from tbl_room_detail
	    where fk_lodging_code = #{lodgingCode}
	</select>
	
	
	
	<resultMap type="HashMap" id="ReserveRoomDetail">
		<result property="lodging_name" column="lodging_name" javaType="String" />
		<result property="lodging_address" column="lodging_address" javaType="String" />
		<result property="lodging_code" column="lodging_code" javaType="String" />
		<result property="lodging_tell" column="lodging_tell" javaType="String" />
		<result property="room_detail_code" column="room_detail_code" javaType="String" />
		<result property="room_name" column="room_name" javaType="String" />
		<result property="price" column="price" javaType="String" />
		<result property="check_in" column="check_in" javaType="String" />
		<result property="check_out" column="check_out" javaType="String" />
		<result property="min_person" column="min_person" javaType="String" />
		<result property="max_person" column="max_person" javaType="String" />
		<result property="room_img" column="room_img" javaType="String" />
	</resultMap>
	<select id="getReserveRoomDetail" resultMap="ReserveRoomDetail">
		select lodging_code, lodging_name, lodging_address, lodging_tell, 
			   room_detail_code,room_name, price, check_in, check_out, 
           	   min_person, max_person, room_img
		       from tbl_room_detail R
		       join tbl_lodging L
		       on L.lodging_code = R.fk_lodging_code
		       where lodging_code = #{lodging_code} and R.room_detail_code = #{room_detail_code}
	</select>

	
	<insert id="insertReservation" parameterType="HashMap">
		insert into tbl_reservation (RESERVATION_CODE, FK_USERID, FK_ROOM_DETAIL_CODE, CHECK_IN, CHECK_OUT, RESERVATION_PRICE)
		values(seq_reserve.nextval, #{userid}, #{room_detail_code}, #{check_in} , #{check_out}, #{price})
	</insert>
 
</mapper>
