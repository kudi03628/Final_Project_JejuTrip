<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(네임스페이스명은 프로젝트 전체내에서 유일해야 한다!!!!!) ====  절대  ; 쓰지마라 !!!!!!!!!! 
메퍼가 바뀌면 무조건  WAS를 껐다 켜야한다!!!!!!!!! -->
<mapper namespace="yj_trip">


	<!-- 맛집 리스트 띄우기 -->
	<resultMap type="HashMap" id="categoryMap">
		<result property="rno" 					column="rno"		 		javaType="String" />
		<result property="food_store_code" 		column="food_store_code" 	javaType="String" />
		<result property="local_status" 		column="local_status" 		javaType="String" />
		<result property="food_name" 			column="food_name" 			javaType="String" />
		<result property="food_content" 		column="food_content" 		javaType="String" />
		<result property="food_businesshours" 	column="food_businesshours" javaType="String" />
		<result property="food_mobile" 			column="food_mobile" 		javaType="String" />
		<result property="food_address" 		column="food_address" 		javaType="String" />
		<result property="food_main_img" 		column="food_main_img" 		javaType="String" />
		<result property="review_division" 		column="review_division" 	javaType="String" />
		<result property="food_category" 		column="food_category" 		javaType="String" />
		<result property="filename" 			column="filename" 			javaType="String" />
		<result property="orgfilename" 			column="orgfilename" 		javaType="String" />
		<result property="filesize" 			column="filesize" 			javaType="String" />
		<result property="readcount" 			column="readcount" 			javaType="String" />
	</resultMap>
	<select id="viewFoodstoreList" parameterType="HashMap" resultType="com.spring.app.trip.domain.FoodstoreVO">
		SELECT rno, food_store_code, local_status, food_name, food_content, food_businesshours, food_mobile
			 , food_address, food_main_img, review_division, food_category
			 , filename, orgfilename, filesize
			 , readcount
		FROM 
		(
			SELECT rownum as RNO, food_store_code, local_status, food_name, food_content, food_businesshours, food_mobile
			     , food_address, food_main_img, review_division, food_category
			     , filename, orgfilename, filesize
			     , readcount
			FROM
			(
				select food_store_code, local_status, food_name, food_content, food_businesshours, food_mobile
				     , substr(food_address, 0, instr(food_address, ' ', 1, 2)-1) AS food_address
				     , food_main_img, review_division, food_category
				     , filename, orgfilename, filesize
				     , readcount
				from tbl_food_store
				where 1=1
			
				<!-- 카테고리 체크박스 다중선택 -->
				<if test="arr_category != null">
					AND food_category IN
					<foreach collection="arr_category" index="i" open="(" separator="," close=")">
						'${arr_category[i]}'
					</foreach>
				</if>
				<!-- 지역 체크박스 다중선택 -->
				<if test="arr_area != null">
					AND local_status IN
					<foreach collection="arr_area" index="i" open="(" separator="," close=")">
						'${arr_area[i]}'
					</foreach>
				</if>
				<!-- 검색 -->
				<if test="searchWord != ''">
					AND lower(food_name) like '%'||lower(#{searchWord})||'%'
				</if>
			)V
		)
		WHERE rno between #{startRno} and #{endRno}
		<!-- 오름차순 정렬 -->
		<if test="orderValue_asc != null">
			ORDER BY ${orderType} ${orderValue_asc}
		</if>
		<!-- 내림차순 정렬 -->
		<if test="orderValue_desc != null">
			ORDER BY ${orderType} ${orderValue_desc}
		</if>
		<if test="orderType == null">
			ORDER BY food_store_code
		</if>
	</select>
	
	
	<!-- 맛집 총 개수 알아오기  -->
	<select id="getTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_food_store
	</select>
	
	
	<!-- 맛집 상세 조회하기 -->
	<select id="viewfoodstoreDetail" parameterType="HashMap" resultType="com.spring.app.trip.domain.FoodstoreVO">
		select food_store_code, local_status, food_name, food_category, food_content, food_address, food_businesshours, food_mobile
			 , food_main_img, review_division, readcount
		from tbl_food_store
		<!-- 맛집 리스트에서 이동한 경우 -->
		<if test="food_store_code != ''">
			where food_store_code = #{food_store_code}
		</if>
		<!-- 맛집 추천에서 이동한 경우 -->
		<if test="food_store_code == ''">
			where food_store_code = #{random_recommend_code}
		</if>
	</select>
	
	
	<!-- 맛집 상세 추가 이미지  -->
	<resultMap type="HashMap" id="imgMap">
		<result property="food_add_code" 		column="food_add_code" 		javaType="String" />	
		<result property="fk_food_store_code" 	column="fk_food_store_code" javaType="String" />	
		<result property="food_add_img" 		column="food_add_img" 		javaType="String" />	
	</resultMap>
	<select id="viewfoodaddImg" parameterType="HashMap" resultMap="imgMap">
		SELECT I.food_add_img
		FROM 
		(
		select food_store_code, food_name
		from tbl_food_store
		<!-- 맛집 리스트에서 이동한 경우 -->
		<if test="food_store_code != ''">
			where food_store_code = #{food_store_code}
		</if>
		<!-- 맛집 추천에서 이동한 경우 -->
		<if test="food_store_code == ''">
			where food_store_code = #{random_recommend_code}
		</if>
		)S
		JOIN tbl_food_add_img I
		ON S.food_store_code = I.fk_food_store_code
		ORDER BY food_add_img
	</select>
	
	
	<!-- 맛집 랜덤 추천 -->
	<select id="randomRecommend" parameterType="HashMap" resultType="com.spring.app.trip.domain.FoodstoreVO">
		<![CDATA[
			select food_store_code, local_status, food_name, food_content, food_businesshours, food_mobile
				 , food_address, food_main_img, review_division, food_category
			from (
			    select food_store_code, local_status, food_name, food_content, food_businesshours, food_mobile
					 , food_address, food_main_img, review_division, food_category
			    from tbl_food_store
			    order by DBMS_RANDOM.RANDOM
			)
			where rownum <= 3
		]]> 
	</select>
	
	
	<!-- 맛집 리뷰 쓰기  -->
	<insert id="addFoodstoreReview" parameterType="com.spring.app.trip.domain.ReviewVO">
		insert into tbl_review(REVIEW_CODE, FK_USERID, PARENT_CODE, REVIEW_CONTENT, REGISTERDAY, REVIEW_DIVISION_R)
		values(seq_review.nextval, #{fk_userid}, #{parent_code}, #{review_content}, default, 'B')
	</insert>
	
	
	<!-- 작성한 리뷰 보이기 -->
	<select id="getReviewList" parameterType="HashMap" resultType="com.spring.app.trip.domain.ReviewVO">
		SELECT review_code, fk_userid, review_content, registerday
		FROM
		(
		    select row_number() over(order by review_code desc) As rno
		          , review_code, fk_userid, review_content
		          , to_char(registerday, 'yyyy-mm-dd') AS registerday
		    from tbl_review
		    where parent_code = 5316
		    order by review_code desc
		)V
		WHERE V.rno BETWEEN #{startRno} and #{endRno}
	</select>

	
	<!-- 리뷰 수정하기 -->
	<update id="updateReview" parameterType="HashMap">
		update tbl_review set review_content = #{review_content}, registerday = sysdate
		where review_code = #{review_code}
	</update>


	<!-- 리뷰 삭제하기 -->
	<delete id="deleteReview" parameterType="String">
		delete from tbl_review
		where review_code = #{review_code}
	</delete>


	<!-- 리뷰 총 개수 구하기  -->
	<select id="getReviewTotalCount" parameterType="String" resultType="int">
		select count(*)
		from tbl_review
		where parent_code = #{parent_code}
	</select>


	<!-- 좋아요 총 개수 구하기 -->
	<select id="countFoodlike" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_like
		where parent_code = #{parent_code}
	</select>
	
	
	<!-- 좋아요 추가 -->
	<insert id="addLike" parameterType="HashMap">
		insert into tbl_like (fk_userid,parent_code, like_division_R)
		values (#{fk_userid},#{parent_code},#{like_division_R})
	</insert>
	
	<!-- 좋아요 취소 -->
	<delete id="deleteLike" parameterType="HashMap">
		delete from tbl_like where fk_userid = #{fk_userid} and parent_code = #{parent_code}
	</delete>
	
	
	<!-- 좋아요 여부 알아오기 -->
	<select id="checkLike" parameterType="HashMap" resultType="com.spring.app.trip.domain.LikeVO">
		select fk_userid,parent_code,like_division_R
		from tbl_like
		where fk_userid = #{fk_userid} and parent_code = #{parent_code}
	</select>


	<!-- 글 조회수 1 증가시키기  -->
	<update id="increase_readCount" parameterType="HashMap">
		update tbl_food_store set readCount = readCount + 1
		<if test="food_store_code != ''">
			where food_store_code = #{food_store_code}
		</if>
		<if test="food_store_code == ''">
			where food_store_code = #{random_recommend_code}
		</if>
	</update>


</mapper>
