<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(네임스페이스명은 프로젝트 전체내에서 유일해야 한다!!!!!) ====  절대  ; 쓰지마라 !!!!!!!!!! 
메퍼가 바뀌면 무조건  WAS를 껐다 켜야한다!!!!!!!!! -->
<mapper namespace="ws_trip">

	<insert id="companyRegister" parameterType="com.spring.app.trip.domain.CompanyVO">
		insert into tbl_company (companyid, company_name, pw, email, mobile, registerday, lastpwdchangedate, status, idle) 
		values (#{companyid},#{company_name},#{pw},#{email},#{mobile},default, default, default, default)
	</insert>

	<select id="companyIdCheck" parameterType="String" resultType="String">
		select companyid
		from tbl_company
		where companyid = #{companyid}
	</select>
	
	<select id="companyEmailCheck" parameterType="String" resultType="String">
		select companyid
		from tbl_company
		where email = #{email}
	</select>
	
	<insert id="registerHotelEnd" parameterType="com.spring.app.trip.domain.LodgingVO">
		insert into tbl_lodging (lodging_code , local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize)
                   	   	  values(#{lodging_code},#{local_status},#{lodging_category},#{fk_companyid},#{lodging_name},#{lodging_tell},#{lodging_content},#{lodging_address},#{fileName},#{fileName},#{orgFilename},#{fileSize})
	</insert>
	
	<select id="select_lodgingvo" parameterType="HashMap" resultType="com.spring.app.trip.domain.LodgingVO">
		
		SELECT lodging_code, local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize, status 
		FROM 
		(
		    SELECT rownum AS RNO
		         , lodging_code, local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize, status, feedback_msg
		    FROM
		    (
		        select lodging_code, local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize, status, feedback_msg
		        from tbl_lodging
		        <if test="choice_status != ''">where status = #{choice_status}</if>
		        order by lodging_code asc
		    )V
		) T
		WHERE RNO between #{startRno} and #{endRno}
		
	</select>
	
	<update id="screeningRegisterEnd" parameterType="HashMap">
		update tbl_lodging set status = #{status} 
		<if test="status == 2">
			, feedback_msg = #{feedback_msg}
		</if>
		where lodging_code = #{lodging_code}
	</update>
	
	<select id="getTotalCount" parameterType="String" resultType="Integer">
		select count(*) as totalCount
		from tbl_lodging
		<if test="choice_status != ''">where status = #{choice_status}</if>
	</select>
	
	<!-- 편의시설 체크박스를 만들기 위해 DB에 있는 편의시설 테이블에서 편의시설 종류를 select 해온다. -->
	<resultMap type="HashMap" id="map">
		<result property="convenient_code" 	column="convenient_code" 	javaType="String" />
		<result property="convenient_name" 	column="convenient_name" 	javaType="String" />
	</resultMap>
	
	<select id="select_convenient" resultMap="map">
		select convenient_code, convenient_name
		from tbl_convenient
		order by convenient_code asc
	</select>
	
	<select id="getSeq" resultType="String">
		select seq_common.nextval AS seq 
	    from dual
	</select>
	
	<insert id="insert_convenient" parameterType="HashMap">
		insert into tbl_lodging_convenient (fk_convenient_code, fk_lodging_code) values(#{convenient_code},#{seq})
	</insert>
	
</mapper>
