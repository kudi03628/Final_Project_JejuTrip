<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(네임스페이스명은 프로젝트 전체내에서 유일해야 한다!!!!!) ====  절대  ; 쓰지마라 !!!!!!!!!! 
메퍼가 바뀌면 무조건  WAS를 껐다 켜야한다!!!!!!!!! -->
<mapper namespace="ws_trip">

	<insert id="companyRegister" parameterType="com.spring.app.trip.domain.CompanyVO">
		insert into tbl_company (companyid, company_name, pw, email, mobile, registerday, lastpwdchangedate, status, idle) 
		values (#{companyid},#{company_name},#{pw},#{email},#{mobile},default, default, default, default)
	</insert>

	<select id="companyIdCheck" parameterType="String" resultType="String">
		select companyid
		from tbl_company
		where companyid = #{companyid}
	</select>
	
	<select id="companyEmailCheck" parameterType="String" resultType="String">
		select companyid
		from tbl_company
		where email = #{email}
	</select>
	
	<insert id="registerHotelEnd" parameterType="com.spring.app.trip.domain.LodgingVO">
		insert into tbl_lodging (lodging_code , local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize)
                   	   	  values(#{lodging_code},#{local_status},#{lodging_category},#{fk_companyid},#{lodging_name},#{lodging_tell},#{lodging_content},#{lodging_address},#{fileName},#{fileName},#{orgFilename},#{fileSize})
	</insert>
	
	<select id="select_lodgingvo" parameterType="HashMap" resultType="com.spring.app.trip.domain.LodgingVO">
		
		SELECT lodging_code, local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize, status 
		FROM 
		(
		    SELECT rownum AS RNO
		         , lodging_code, local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize, status, feedback_msg
		    FROM
		    (
		        select lodging_code, local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize, status, feedback_msg
		        from tbl_lodging
		        <if test="choice_status != ''">where status = #{choice_status}</if>
		        order by lodging_code asc
		    )V
		) T
		WHERE RNO between #{startRno} and #{endRno}
		
	</select>
	
	<update id="screeningRegisterEnd" parameterType="HashMap">
		update tbl_lodging set status = #{status} 
		<if test="status == 2">
			, feedback_msg = #{feedback_msg}
		</if>
		where lodging_code = #{lodging_code}
	</update>
	
	<select id="getTotalCount" parameterType="String" resultType="Integer">
		select count(*) as totalCount
		from tbl_lodging
		<if test="choice_status != ''">where status = #{choice_status}</if>
	</select>
	
	<!-- 편의시설 체크박스를 만들기 위해 DB에 있는 편의시설 테이블에서 편의시설 종류를 select 해온다. -->
	<resultMap type="HashMap" id="convenient_map">
		<result property="convenient_code" 	column="convenient_code" 	javaType="String" />
		<result property="convenient_name" 	column="convenient_name" 	javaType="String" />
	</resultMap>
	
	<select id="select_convenient" resultMap="convenient_map">
		select convenient_code, convenient_name
		from tbl_convenient
		order by convenient_code asc
	</select>
	
	<select id="getSeq" resultType="String">
		select seq_common.nextval AS seq 
	    from dual
	</select>
	
	<insert id="insert_convenient" parameterType="HashMap">
		insert into tbl_lodging_convenient (fk_convenient_code, fk_lodging_code) values(#{convenient_code},#{seq})
	</insert>
	
	<!-- 등록 신청한 호텔들의 편의시설 정보를 가져와서 view 페이지에 표출시켜주기위한 List select -->
	<resultMap type="HashMap" id="convenient_lodging_map">
		<result property="convenient_name" 	column="convenient_name" 	javaType="String" />
		<result property="lodging_code" 	column="lodging_code" 	javaType="String" />
	</resultMap>
	
	<select id="select_convenient_list" resultMap="convenient_lodging_map">
		SELECT C.convenient_name, D.lodging_code
		FROM tbl_lodging_convenient L JOIN tbl_convenient C
		ON L.fk_convenient_code = C.convenient_code
		JOIN tbl_lodging D
		ON D.lodging_code = fk_lodging_code
	</select>
	
	<!-- 숙소 테이블에서 해당 업체의 신청건수, 승인건수, 반려 건수를 각각 알아온다. -->
	<resultMap type="HashMap" id="count_registerHotel">
		<result property="status" 		column="status" 		javaType="String" />
		<result property="count_status" column="count_status" 	javaType="String" />
	</resultMap>
	
	<select id="select_count_registerHotel" parameterType="String" resultMap="count_registerHotel">
		select status as status, count(status) as count_status
		from tbl_lodging
		where fk_companyid = #{companyid}
		group by status
	</select>
	
	<select id="select_loginCompany_lodgingvo" parameterType="String" resultType="com.spring.app.trip.domain.LodgingVO">
		select lodging_code, local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, status, feedback_msg
		from tbl_lodging
		where fk_companyid = #{companyid}
		order by lodging_code desc
	</select>
	
	<!-- 업체가 신청한 호텔에 대한 상세 정보를 보여주기위해 DB에서 읽어온다. -->
	<select id="selectRegisterHotelJSON" parameterType="String" resultType="com.spring.app.trip.domain.LodgingVO">
		select lodging_name, lodging_category, local_status, lodging_tell, lodging_content, lodging_address, main_img, status, feedback_msg
		from tbl_lodging
		where lodging_code = #{lodging_code}
	</select>
	
	<select id="select_member_all" resultType="com.spring.app.trip.domain.MemberVO">
		SELECT userid, email, user_name, mobile, address, detail_address, gender, to_char(registerday,'yyyy-mm-dd') as registerday, status, idle
		FROM 
		(
		    SELECT rownum AS RNO
		         , userid, email, user_name, mobile, address, detail_address, gender, registerday, status, idle
		    FROM
		    (
		        select userid, email, user_name, mobile, address, detail_address, gender, registerday, status, idle
		        from tbl_member
		        order by registerday desc
		    )V
		) T
		where RNO between #{startRno} and #{endRno}
	</select>
	
	<select id="select_Company_all" resultType="com.spring.app.trip.domain.CompanyVO">
		SELECT companyid, company_name, email, mobile, registerday, status, idle
		FROM 
		(
		    SELECT rownum AS RNO
		         , companyid, company_name, email, mobile, registerday, status, idle
		    FROM
		    (
		        select companyid, company_name, email, mobile, registerday, status, idle
		        from tbl_company
		        order by registerday desc
		    )V
		) T
		where RNO between #{startRno} and #{endRno}
	</select>
	
	<select id="getTotalMemberCount" resultType="Integer">
		select count(*) as count
		from tbl_member
	</select>
	
	<select id="getTotalCompanyCount" resultType="Integer">
		select count(*) as count
		from tbl_Company
	</select>
	
	<select id="select_detailMember" parameterType="String" resultType="com.spring.app.trip.domain.MemberVO">
		select userid, email, user_name, mobile, address, detail_address, birthday, gender, registerday, status, idle
		from tbl_member
		where userid = #{userid}
	</select>
	
	<select id="select_detailCompany" parameterType="String" resultType="com.spring.app.trip.domain.CompanyVO">
		select companyid, company_name, email, mobile, registerday, status, idle
		from tbl_company
		where companyid = #{userid}
	</select>
	
	<resultMap type="HashMap" id="CNT_YEAR_REGISTER_MEMBER">
		<result property="line_year" column="line_year" 	javaType="String" />
		<result property="line_CNT" 	column="line_CNT" 	javaType="String" />
	</resultMap>
	
	<select id="get_year_login_member_chart" parameterType="String" resultMap="CNT_YEAR_REGISTER_MEMBER">
		WITH A
		AS (
		select to_char(logindate,'yyyy') as line_year, count(*) as line_CNT
		from tbl_member_loginhistory
		where fk_userid !='admin'
		group by to_char(logindate,'yyyy')
		)
		SELECT A.line_year, A.line_CNT
		FROM A CROSS JOIN (SELECT SUM(line_CNT) AS TOTAL FROM A) B
		order by line_year asc
	</select>
	
	<resultMap type="HashMap" id="CNT_MONTH_REGISTER_MEMBER">
		<result property="line_month" column="line_month" 	javaType="String" />
		<result property="line_CNT" 	column="line_CNT" 	javaType="String" />
	</resultMap>
	
	<select id="get_month_login_member_chart" parameterType="String" resultMap="CNT_MONTH_REGISTER_MEMBER">
		WITH A
		AS (
		select to_char(logindate,'yyyy-mm') as line_month, count(*) as line_CNT
		from tbl_member_loginhistory
		where fk_userid != 'admin' and logindate between #{choice_year}||'-01-01' and #{choice_year}||'-12-31'
		group by to_char(logindate,'yyyy-mm')
		)
		SELECT A.line_month, A.line_CNT
		FROM A CROSS JOIN (SELECT SUM(line_CNT) AS TOTAL FROM A) B
		order by line_month asc
	</select>
	
	<resultMap type="HashMap" id="PERCNTAGE_AGE_GROUP">
		<result property="ageGroup" 	column="ageGroup" 	javaType="String" />
		<result property="PERCNTAGE" 	column="PERCNTAGE" 	javaType="String" />
	</resultMap>
	
	<select id="user_age_group_chart" resultMap="PERCNTAGE_AGE_GROUP">
		<![CDATA[
		WITH A
		AS (
		SELECT ageGroup, count(*) as ageGroup_CNT
		FROM
		(
		select trunc(case 
		       when to_date(extract(year from sysdate)||substr(birthday,6,2)||substr(birthday,9,2),'yyyymmdd') <= to_date(to_char(sysdate,'yyyymmdd')) 
		       then extract(year from sysdate) - substr(birthday,0,4)
		       else extract(year from sysdate) - substr(birthday,0,4) - 1
		       end,-1) as ageGroup
		from tbl_member
		where userid != 'admin'
		)
		group by ageGroup
		)
		SELECT A.ageGroup||'대' as ageGroup, TO_CHAR( ROUND((A.ageGroup_CNT / B.TOTAL) * 100, 1), '990.0') AS PERCNTAGE
		FROM A CROSS JOIN (SELECT SUM(ageGroup_CNT) AS TOTAL FROM A) B
		order by ageGroup asc
		]]> 
	</select>
	
	<resultMap type="HashMap" id="PERCNTAGE_GENDER">
		<result property="gender" 		column="gender" 	javaType="String" />
		<result property="PERCNTAGE" 	column="PERCNTAGE" 	javaType="String" />
	</resultMap>
	
	<select id="user_gender_chart" resultMap="PERCNTAGE_GENDER">
		WITH A
		AS (
		select gender, count(*) as CNT
		from tbl_member
		where userid != 'admin'
		group by gender
		)
		SELECT A.gender, TO_CHAR( ROUND((A.CNT / B.TOTAL) * 100, 1), '990.0') AS PERCNTAGE
		FROM A CROSS JOIN (SELECT SUM(CNT) AS TOTAL FROM A) B
		order by gender asc
	</select>
	
	<resultMap type="HashMap" id="CNT_YEAR_RESERVATION">
		<result property="reservation_year" column="reservation_year" 	javaType="String" />
		<result property="CNT" 				column="CNT" 	javaType="String" />
	</resultMap>
	
	<select id="get_year_reservation_hotel_chart" parameterType="String" resultMap="CNT_YEAR_RESERVATION">
		WITH A
		AS (
		select R.room_detail_code
		from tbl_lodging L JOIN tbl_room_detail R
		on L.lodging_code = r.fk_lodging_code
		<if test="lodging_code != null">
			where L.fk_companyid = #{lodging_code}
		</if>
		)
		SELECT to_char(R.check_in,'yyyy') as reservation_year , count(*) as CNT 
		FROM A JOIN tbl_reservation R
		ON A.room_detail_code = R.fk_room_detail_code
		GROUP BY to_char(R.check_in,'yyyy')
		ORDER BY 1
	</select>
	
	<resultMap type="HashMap" id="CNT_MONTH_RESERVATION">
		<result property="reservation_month" column="reservation_month" 	javaType="String" />
		<result property="CNT" 				column="CNT" 					javaType="String" />
	</resultMap>
	
	<select id="get_month_reservation_chart" parameterType="HashMap" resultMap="CNT_MONTH_RESERVATION">
		WITH A
		AS (
		select R.room_detail_code
		from tbl_lodging L JOIN tbl_room_detail R
		on L.lodging_code = r.fk_lodging_code
		<if test="companyid != null">
			where L.fk_companyid = #{companyid}
		</if>
		)
		SELECT to_char(R.check_in,'yyyy-mm') as reservation_month , count(*) as CNT 
		FROM A JOIN tbl_reservation R
		ON A.room_detail_code = R.fk_room_detail_code
		WHERE R.reservation_date between #{choice_year}||'-01-01' and #{choice_year}||'-12-31'
		GROUP BY to_char(R.check_in,'yyyy-mm')
		ORDER BY 1
	</select>
	
	<select id="select_lodging" resultType="com.spring.app.trip.domain.LodgingVO">
		SELECT lodging_code, lodging_name, lodging_tell, lodging_address
		FROM 
		(
		    SELECT rownum AS RNO
		         , lodging_code, lodging_name, lodging_tell, lodging_address
		    FROM
		    (
		        select lodging_code, lodging_name, lodging_tell, lodging_address
		        from tbl_lodging
		        where status = 1
		        order by lodging_name asc
		    )V
		) T
		where RNO between #{startRno} and #{endRno}
	</select>
	
	<select id="getTotalLodgingCount" resultType="Integer">
		select count(*)
		from tbl_lodging
		where status = 1
	</select>
	
	<select id="select_foodstore" resultType="com.spring.app.trip.domain.FoodstoreVO">
		SELECT food_store_code, food_name, food_mobile, food_address
		FROM 
		(
		    SELECT rownum AS RNO
		         , food_store_code, food_name, food_mobile, food_address
		    FROM
		    (
		        select food_store_code, food_name, food_mobile, food_address
		        from tbl_food_store
		        order by food_name asc
		    )V
		) T
		where RNO between #{startRno} and #{endRno}
	</select>
	
	<select id="getTotalFoodstoreCount" resultType="Integer">
		select count(*)
		from tbl_food_store
	</select>
	
	<select id="select_play" resultType="com.spring.app.trip.domain.PlayVO">
		SELECT play_code, play_name, play_mobile, play_address
		FROM 
		(
		    SELECT rownum AS RNO
		         , play_code, play_name, play_mobile, play_address
		    FROM
		    (
		        select play_code, play_name, play_mobile, play_address
		        from tbl_play
		        order by play_name asc
		    )V
		) T
		where RNO between #{startRno} and #{endRno}
	</select>
	
	<select id="getTotalPlayCount" resultType="Integer">
		select count(*)
		from tbl_play
	</select>
	
	<resultMap type="HashMap" id="CNT_DAY_RESERVATION">
		<result property="reservation_day" column="reservation_day" 	javaType="String" />
		<result property="CNT" 				column="CNT" 					javaType="String" />
	</resultMap>
	
	<select id="get_day_reservation_chart" parameterType="HashMap" resultMap="CNT_DAY_RESERVATION">
		WITH A
		AS (
		select R.room_detail_code
		from tbl_lodging L JOIN tbl_room_detail R
		on L.lodging_code = r.fk_lodging_code
		<if test="companyid != null">
			where L.fk_companyid = #{companyid}
		</if>
		)
		SELECT to_char(R.check_in,'yyyy-mm-dd') as reservation_day , count(*) as CNT 
		FROM A JOIN tbl_reservation R
		ON A.room_detail_code = R.fk_room_detail_code
		WHERE R.reservation_date between extract(year from sysdate)||'-'||#{choice_month}||'-01' and #{choice_month_last_day}
		GROUP BY to_char(R.check_in,'yyyy-mm-dd')
		ORDER BY 1
	</select>
	
	<select id="get_choice_month_last_day" parameterType="String" resultType="String">
		select to_char(last_day(to_date(extract(year from sysdate)||'-'||#{choice_month}||'-01')),'yyyy-mm-dd') as choice_month_last_day
		from dual
	</select>
	
	<resultMap type="HashMap" id="profit_year">
		<result property="year" 	column="year" 	javaType="String" />
		<result property="profit" 	column="profit" javaType="String" />
	</resultMap>
	
	<select id="get_year_profit_chart" parameterType="HashMap" resultMap="profit_year">
		WITH A
		AS (
		select R.room_detail_code
		from tbl_lodging L JOIN tbl_room_detail R
		on L.lodging_code = r.fk_lodging_code
		<if test="companyid != null">
			where L.fk_companyid = #{companyid}
		</if>
		)
		SELECT to_char(R.reservation_date,'yyyy') as year, sum(R.reservation_price) as profit
		FROM A JOIN tbl_reservation R
		ON A.room_detail_code = R.fk_room_detail_code
		GROUP BY to_char(R.reservation_date,'yyyy')
		ORDER BY year
	</select>
	
	<resultMap type="HashMap" id="profit_month">
		<result property="year" 	column="year" 	javaType="String" />
		<result property="profit" 	column="profit" javaType="String" />
	</resultMap>
	
	<select id="get_month_profit_chart" parameterType="HashMap" resultMap="profit_month">
		WITH A
		AS (
		select R.room_detail_code
		from tbl_lodging L JOIN tbl_room_detail R
		on L.lodging_code = r.fk_lodging_code
		<if test="companyid != null">
			where L.fk_companyid = #{companyid}
		</if>
		)
		SELECT to_char(R.reservation_date,'yyyy-mm') as year, sum(R.reservation_price) as profit
		FROM A JOIN tbl_reservation R
		ON A.room_detail_code = R.fk_room_detail_code
		WHERE R.reservation_date between #{choice_year}||'-01-01' and #{choice_year}||'-12-31'
		GROUP BY to_char(R.reservation_date,'yyyy-mm')
		ORDER BY year
	</select>
	
	<resultMap type="HashMap" id="profit_day">
		<result property="day" 	column="day" 	javaType="String" />
		<result property="profit" 	column="profit" javaType="String" />
	</resultMap>
	
	<select id="get_day_profit_chart" parameterType="HashMap" resultMap="profit_day">
		WITH A
		AS (
		select R.room_detail_code
		from tbl_lodging L JOIN tbl_room_detail R
		on L.lodging_code = r.fk_lodging_code
		<if test="companyid != null">
			where L.fk_companyid = #{companyid}
		</if>
		)
		SELECT to_char(R.reservation_date,'yyyy-mm-dd') as day, sum(R.reservation_price) as profit
		FROM A JOIN tbl_reservation R
		ON A.room_detail_code = R.fk_room_detail_code
		WHERE R.reservation_date between extract(year from sysdate)||'-'||#{choice_month}||'-01' and #{choice_month_last_day}
		GROUP BY to_char(R.reservation_date,'yyyy-mm-dd')
		ORDER BY day
	</select>
	
</mapper>
