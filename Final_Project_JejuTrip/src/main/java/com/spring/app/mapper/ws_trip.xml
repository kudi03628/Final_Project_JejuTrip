<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(네임스페이스명은 프로젝트 전체내에서 유일해야 한다!!!!!) ====  절대  ; 쓰지마라 !!!!!!!!!! 
메퍼가 바뀌면 무조건  WAS를 껐다 켜야한다!!!!!!!!! -->
<mapper namespace="ws_trip">

	<insert id="companyRegister" parameterType="com.spring.app.trip.domain.CompanyVO">
		insert into tbl_company (companyid, company_name, pw, email, mobile, registerday, lastpwdchangedate, status, idle) 
		values (#{companyid},#{company_name},#{pw},#{email},#{mobile},default, default, default, default)
	</insert>

	<select id="companyIdCheck" parameterType="String" resultType="String">
		select companyid
		from tbl_company
		where companyid = #{companyid}
	</select>
	
	<select id="companyEmailCheck" parameterType="String" resultType="String">
		select companyid
		from tbl_company
		where email = #{email}
	</select>
	
	<insert id="registerHotelEnd" parameterType="com.spring.app.trip.domain.LodgingVO">
		insert into tbl_lodging (lodging_code , local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize)
                   	   	  values(#{lodging_code},#{local_status},#{lodging_category},#{fk_companyid},#{lodging_name},#{lodging_tell},#{lodging_content},#{lodging_address},#{fileName},#{fileName},#{orgFilename},#{fileSize})
	</insert>
	
	<select id="select_lodgingvo" parameterType="HashMap" resultType="com.spring.app.trip.domain.LodgingVO">
		
		SELECT lodging_code, local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize, status 
		FROM 
		(
		    SELECT rownum AS RNO
		         , lodging_code, local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize, status, feedback_msg
		    FROM
		    (
		        select lodging_code, local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, filename, orgfilename, filesize, status, feedback_msg
		        from tbl_lodging
		        <if test="choice_status != ''">where status = #{choice_status}</if>
		        order by lodging_code asc
		    )V
		) T
		WHERE RNO between #{startRno} and #{endRno}
		
	</select>
	
	<update id="screeningRegisterEnd" parameterType="HashMap">
		update tbl_lodging set status = #{status} 
		<if test="status == 2">
			, feedback_msg = #{feedback_msg}
		</if>
		where lodging_code = #{lodging_code}
	</update>
	
	<select id="getTotalCount" parameterType="String" resultType="Integer">
		select count(*) as totalCount
		from tbl_lodging
		<if test="choice_status != ''">where status = #{choice_status}</if>
	</select>
	
	<!-- 편의시설 체크박스를 만들기 위해 DB에 있는 편의시설 테이블에서 편의시설 종류를 select 해온다. -->
	<resultMap type="HashMap" id="convenient_map">
		<result property="convenient_code" 	column="convenient_code" 	javaType="String" />
		<result property="convenient_name" 	column="convenient_name" 	javaType="String" />
	</resultMap>
	
	<select id="select_convenient" resultMap="convenient_map">
		select convenient_code, convenient_name
		from tbl_convenient
		order by convenient_code asc
	</select>
	
	<select id="getSeq" resultType="String">
		select seq_common.nextval AS seq 
	    from dual
	</select>
	
	<insert id="insert_convenient" parameterType="HashMap">
		insert into tbl_lodging_convenient (fk_convenient_code, fk_lodging_code) values(#{convenient_code},#{seq})
	</insert>
	
	<!-- 등록 신청한 호텔들의 편의시설 정보를 가져와서 view 페이지에 표출시켜주기위한 List select -->
	<resultMap type="HashMap" id="convenient_lodging_map">
		<result property="convenient_name" 	column="convenient_name" 	javaType="String" />
		<result property="lodging_code" 	column="lodging_code" 	javaType="String" />
	</resultMap>
	
	<select id="select_convenient_list" resultMap="convenient_lodging_map">
		SELECT C.convenient_name, D.lodging_code
		FROM tbl_lodging_convenient L JOIN tbl_convenient C
		ON L.fk_convenient_code = C.convenient_code
		JOIN tbl_lodging D
		ON D.lodging_code = fk_lodging_code
	</select>
	
	<!-- 숙소 테이블에서 해당 업체의 신청건수, 승인건수, 반려 건수를 각각 알아온다. -->
	<resultMap type="HashMap" id="count_registerHotel">
		<result property="status" 		column="status" 		javaType="String" />
		<result property="count_status" column="count_status" 	javaType="String" />
	</resultMap>
	
	<select id="select_count_registerHotel" parameterType="String" resultMap="count_registerHotel">
		select status as status, count(status) as count_status
		from tbl_lodging
		where fk_companyid = #{companyid}
		group by status
	</select>
	
	<select id="select_loginCompany_lodgingvo" parameterType="String" resultType="com.spring.app.trip.domain.LodgingVO">
		select lodging_code, local_status, lodging_category, fk_companyid, lodging_name, lodging_tell, lodging_content, lodging_address, main_img, status, feedback_msg
		from tbl_lodging
		where fk_companyid = #{companyid}
		order by lodging_code desc
	</select>
	
	<!-- 업체가 신청한 호텔에 대한 상세 정보를 보여주기위해 DB에서 읽어온다. -->
	<select id="selectRegisterHotelJSON" parameterType="String" resultType="com.spring.app.trip.domain.LodgingVO">
		select lodging_name, lodging_category, local_status, lodging_tell, lodging_content, lodging_address, main_img, status, feedback_msg
		from tbl_lodging
		where lodging_code = #{lodging_code}
	</select>
	
	<select id="select_member_all" resultType="com.spring.app.trip.domain.MemberVO">
		SELECT userid, email, user_name, mobile, address, detail_address, gender, to_char(registerday,'yyyy-mm-dd') as registerday, status, idle
		FROM 
		(
		    SELECT rownum AS RNO
		         , userid, email, user_name, mobile, address, detail_address, gender, registerday, status, idle
		    FROM
		    (
		        select userid, email, user_name, mobile, address, detail_address, gender, registerday, status, idle
		        from tbl_member
		        order by registerday desc
		    )V
		) T
		where RNO between #{startRno} and #{endRno}
	</select>
	
	<select id="select_Company_all" resultType="com.spring.app.trip.domain.CompanyVO">
		SELECT companyid, company_name, email, mobile, registerday, status, idle
		FROM 
		(
		    SELECT rownum AS RNO
		         , companyid, company_name, email, mobile, registerday, status, idle
		    FROM
		    (
		        select companyid, company_name, email, mobile, registerday, status, idle
		        from tbl_company
		        order by registerday desc
		    )V
		) T
		where RNO between #{startRno} and #{endRno}
	</select>
	
	<select id="getTotalMemberCount" resultType="Integer">
		select count(*) as count
		from tbl_member
	</select>
	
	<select id="getTotalCompanyCount" resultType="Integer">
		select count(*) as count
		from tbl_Company
	</select>
	
</mapper>
